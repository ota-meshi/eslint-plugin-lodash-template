import{_ as n,C as r,c as p,o,am as t,j as i,G as h,w as e,a}from"./chunks/framework.CqWF1Tqh.js";const E=JSON.parse('{"title":"lodash-template/no-script-parsing-error","description":"disallow parsing errors in template","frontmatter":{"pageClass":"rule-details","sidebarDepth":0,"title":"lodash-template/no-script-parsing-error","description":"disallow parsing errors in template"},"headers":[],"relativePath":"rules/no-script-parsing-error.md","filePath":"rules/no-script-parsing-error.md","lastUpdated":1753500791000}'),k={name:"rules/no-script-parsing-error.md"},d={class:"language-js vp-adaptive-theme"},g={class:"shiki shiki-themes github-light github-dark vp-code twoslash lsp",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0"},u={class:"line"};function c(m,s,y,F,D,b){const l=r("v-menu");return o(),p("div",null,[s[9]||(s[9]=t(`<h1 id="lodash-template-no-script-parsing-error" tabindex="-1">lodash-template/no-script-parsing-error <a class="header-anchor" href="#lodash-template-no-script-parsing-error" aria-label="Permalink to &quot;lodash-template/no-script-parsing-error&quot;">​</a></h1><blockquote><p>disallow parsing errors in template</p></blockquote><ul><li>⚙️ This rule is included in all of <code>&quot;plugin:lodash-template/base&quot;</code>, <code>&quot;plugin:lodash-template/all&quot;</code>, <code>&quot;plugin:lodash-template/best-practices&quot;</code>, <code>&quot;plugin:lodash-template/recommended&quot;</code>, <code>&quot;plugin:lodash-template/recommended-with-html&quot;</code> and <code>&quot;plugin:lodash-template/recommended-with-script&quot;</code>.</li></ul><h2 id="rule-details" tabindex="-1">Rule Details <a class="header-anchor" href="#rule-details" aria-label="Permalink to &quot;Rule Details&quot;">​</a></h2><p>This rule reports syntax errors in JavaScript template.<br> This rule works when verification of <a href="./../#for-javascript-templates">&quot;JavaScript Templates&quot;</a> is enabled.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code twoslash lsp" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* eslint &quot;lodash-template/no-script-parsing-error&quot;: &quot;error&quot; */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* ✓ GOOD */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;%</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (a) { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;ABC&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;DEF&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;</span></span></code></pre></div>`,6)),i("div",d,[s[7]||(s[7]=i("button",{title:"Copy Code",class:"copy"},null,-1)),s[8]||(s[8]=i("span",{class:"lang"},"js",-1)),i("pre",g,[i("code",null,[s[6]||(s[6]=t(`<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* eslint &quot;lodash-template/no-script-parsing-error&quot;: &quot;error&quot; */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* ✗ BAD */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;%</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (a) { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;ABC&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;</span></span>
`,10)),i("span",u,[s[2]||(s[2]=i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"const",-1)),s[3]||(s[3]=i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," ",-1)),h(l,{class:"twoslash-error twoslash-error-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:e(({})=>s[0]||(s[0]=[i("span",{class:"twoslash-popup-container vp-copy-ignore"},[i("div",{class:"twoslash-popup-error vp-doc"},[i("p",null,[a("Parsing error: Identifier 'a' has already been declared. ("),i("a",{href:"https://ota-meshi.github.io/eslint-plugin-lodash-template/rules/no-script-parsing-error.html"},"lodash-template/no-script-parsing-error"),a(")")])])],-1)])),default:e(()=>[s[1]||(s[1]=i("span",null,[i("span",null,[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"a")])],-1))]),_:1,__:[1]}),s[4]||(s[4]=i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," =",-1)),s[5]||(s[5]=i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'DEF'",-1))])])])]),s[10]||(s[10]=i("h2",{id:"implementation",tabindex:"-1"},[a("Implementation "),i("a",{class:"header-anchor",href:"#implementation","aria-label":'Permalink to "Implementation"'},"​")],-1)),s[11]||(s[11]=i("ul",null,[i("li",null,[i("a",{href:"https://github.com/ota-meshi/eslint-plugin-lodash-template/blob/master/lib/rules/no-script-parsing-error.js",target:"_blank",rel:"noreferrer"},"Rule source")]),i("li",null,[i("a",{href:"https://github.com/ota-meshi/eslint-plugin-lodash-template/blob/master/tests/lib/rules/no-script-parsing-error.js",target:"_blank",rel:"noreferrer"},"Test source")])],-1))])}const f=n(k,[["render",c]]);export{E as __pageData,f as default};
