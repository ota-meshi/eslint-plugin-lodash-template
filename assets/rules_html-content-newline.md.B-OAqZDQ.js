import{_ as p,C as h,c as o,o as r,am as a,j as i,G as e,w as l,a as t}from"./chunks/framework.CqWF1Tqh.js";const C=JSON.parse('{"title":"lodash-template/html-content-newline","description":"require or disallow a line break before and after HTML contents","frontmatter":{"pageClass":"rule-details","sidebarDepth":0,"title":"lodash-template/html-content-newline","description":"require or disallow a line break before and after HTML contents"},"headers":[],"relativePath":"rules/html-content-newline.md","filePath":"rules/html-content-newline.md","lastUpdated":1753500791000}'),k={name:"rules/html-content-newline.md"},d={class:"language-html vp-adaptive-theme"},E={class:"shiki shiki-themes github-light github-dark vp-code twoslash lsp",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0"},g={class:"line"},u={class:"language-html vp-adaptive-theme"},m={class:"shiki shiki-themes github-light github-dark vp-code twoslash lsp",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0"},y={class:"line"},c={class:"line"},f={class:"line"};function b(w,s,q,v,F,A){const n=h("v-menu");return r(),o("div",null,[s[35]||(s[35]=a('<h1 id="lodash-template-html-content-newline" tabindex="-1">lodash-template/html-content-newline <a class="header-anchor" href="#lodash-template-html-content-newline" aria-label="Permalink to &quot;lodash-template/html-content-newline&quot;">‚Äã</a></h1><blockquote><p>require or disallow a line break before and after HTML contents</p></blockquote><ul><li>‚öôÔ∏è This rule is included in <code>&quot;plugin:lodash-template/recommended-with-html&quot;</code> and <code>&quot;plugin:lodash-template/all&quot;</code>.</li><li>üîß The <code>--fix</code> option on the <a href="https://eslint.org/docs/user-guide/command-line-interface#fixing-problems" target="_blank" rel="noreferrer">command line</a> can automatically fix some of the problems reported by this rule.</li></ul><h2 id="rule-details" tabindex="-1">Rule Details <a class="header-anchor" href="#rule-details" aria-label="Permalink to &quot;Rule Details&quot;">‚Äã</a></h2><p>This rule enforces a line break (or no line break) before and after HTML contents.</p>',5)),i("div",d,[s[10]||(s[10]=i("button",{title:"Copy Code",class:"copy"},null,-1)),s[11]||(s[11]=i("span",{class:"lang"},"html",-1)),i("pre",E,[i("code",null,[s[9]||(s[9]=a(`<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;%</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> /* eslint &quot;lodash-template/html-content-newline&quot;: &quot;error&quot; */ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- ‚úì GOOD --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;panel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;content&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;panel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  content</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;panel&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  content</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- ‚úó BAD --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;panel&quot;</span></span>
`,34)),i("span",g,[s[4]||(s[4]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">",-1)),e(n,{class:"twoslash-error twoslash-error-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>s[0]||(s[0]=[i("span",{class:"twoslash-popup-container vp-copy-ignore"},[i("div",{class:"twoslash-popup-error vp-doc"},[i("p",null,[t('Expected 1 line break after closing bracket of the "div" element, but no line breaks found. ('),i("a",{href:"https://ota-meshi.github.io/eslint-plugin-lodash-template/rules/html-content-newline.html"},"lodash-template/html-content-newline"),t(")")])])],-1)])),default:l(()=>[s[1]||(s[1]=i("span",null,[i("span",{class:"twoslash-error-empty"})],-1))]),_:1,__:[1]}),s[5]||(s[5]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"content",-1)),e(n,{class:"twoslash-error twoslash-error-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>s[2]||(s[2]=[i("span",{class:"twoslash-popup-container vp-copy-ignore"},[i("div",{class:"twoslash-popup-error vp-doc"},[i("p",null,[t('Expected 1 line break before opening bracket of the "div" element, but no line breaks found. ('),i("a",{href:"https://ota-meshi.github.io/eslint-plugin-lodash-template/rules/html-content-newline.html"},"lodash-template/html-content-newline"),t(")")])])],-1)])),default:l(()=>[s[3]||(s[3]=i("span",null,[i("span",{class:"twoslash-error-empty"})],-1))]),_:1,__:[3]}),s[6]||(s[6]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"</",-1)),s[7]||(s[7]=i("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"div",-1)),s[8]||(s[8]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">",-1))])])])]),s[36]||(s[36]=a(`<h2 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">‚Äã</a></h2><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;lodash-template/html-content-newline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;singleline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ignore&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;multiline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;always&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;ignoreNames&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pre&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;textarea&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><code>singleline</code> ... the configuration for single-line elements. It&#39;s a single-line element if startTag, endTag and contents are single-line. <ul><li><code>&quot;ignore&quot;</code> ... Don&#39;t enforce line breaks style before and after the contents. This is the default.</li><li><code>&quot;never&quot;</code> ... disallow line breaks before and after the contents.</li><li><code>&quot;always&quot;</code> ... require one line break before and after the contents.</li></ul></li><li><code>multiline</code> ... the configuration for multiline elements. It&#39;s a multiline element if startTag, endTag or contents are multiline. <ul><li><code>&quot;ignore&quot;</code> ... Don&#39;t enforce line breaks style before and after the contents.</li><li><code>&quot;never&quot;</code> ... disallow line breaks before and after the contents.</li><li><code>&quot;always&quot;</code> ... require one line break before and after the contents. This is the default.</li></ul></li><li><code>ignoreNames</code> ... the configuration for element names to ignore line breaks style.<br> default <code>[&quot;pre&quot;, &quot;textarea&quot;]</code></li></ul>`,3)),i("div",u,[s[33]||(s[33]=i("button",{title:"Copy Code",class:"copy"},null,-1)),s[34]||(s[34]=i("span",{class:"lang"},"html",-1)),i("pre",m,[i("code",null,[s[28]||(s[28]=a(`<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;%</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> /*eslint</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  lodash-template/html-content-newline: [&quot;error&quot;, {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &quot;singleline&quot;: &quot;always&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &quot;multiline&quot;: &quot;never&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  }]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- ‚úì GOOD --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;panel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  content</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;panel&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;content&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- ‚úó BAD --&gt;</span></span>
`,34)),i("span",y,[s[16]||(s[16]=a('<span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;panel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span>',6)),e(n,{class:"twoslash-error twoslash-error-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>s[12]||(s[12]=[i("span",{class:"twoslash-popup-container vp-copy-ignore"},[i("div",{class:"twoslash-popup-error vp-doc"},[i("p",null,[t('Expected 1 line break after closing bracket of the "div" element, but no line breaks found. ('),i("a",{href:"https://ota-meshi.github.io/eslint-plugin-lodash-template/rules/html-content-newline.html"},"lodash-template/html-content-newline"),t(")")])])],-1)])),default:l(()=>[s[13]||(s[13]=i("span",null,[i("span",{class:"twoslash-error-empty"})],-1))]),_:1,__:[13]}),s[17]||(s[17]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"content",-1)),e(n,{class:"twoslash-error twoslash-error-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>s[14]||(s[14]=[i("span",{class:"twoslash-popup-container vp-copy-ignore"},[i("div",{class:"twoslash-popup-error vp-doc"},[i("p",null,[t('Expected 1 line break before opening bracket of the "div" element, but no line breaks found. ('),i("a",{href:"https://ota-meshi.github.io/eslint-plugin-lodash-template/rules/html-content-newline.html"},"lodash-template/html-content-newline"),t(")")])])],-1)])),default:l(()=>[s[15]||(s[15]=i("span",null,[i("span",{class:"twoslash-error-empty"})],-1))]),_:1,__:[15]}),s[18]||(s[18]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"</",-1)),s[19]||(s[19]=i("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"div",-1)),s[20]||(s[20]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">",-1))]),s[29]||(s[29]=a(`
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;panel&quot;</span></span>
`,7)),i("span",c,[s[23]||(s[23]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">",-1)),e(n,{class:"twoslash-error twoslash-error-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>s[21]||(s[21]=[i("span",{class:"twoslash-popup-container vp-copy-ignore"},[i("div",{class:"twoslash-popup-error vp-doc"},[i("p",null,[t('Expected no line breaks after closing bracket of the "div" element, but 1 line break found. ('),i("a",{href:"https://ota-meshi.github.io/eslint-plugin-lodash-template/rules/html-content-newline.html"},"lodash-template/html-content-newline"),t(")")])])],-1)])),default:l(()=>[s[22]||(s[22]=i("span",null,[i("span",{class:"twoslash-error-empty"})],-1))]),_:1,__:[22]})]),s[30]||(s[30]=t(`
`,-1)),i("span",f,[s[26]||(s[26]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  ",-1)),s[27]||(s[27]=i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"content",-1)),e(n,{class:"twoslash-error twoslash-error-hover","popper-class":"shiki twoslash-floating vp-copy-ignore",theme:"twoslash"},{popper:l(({})=>s[24]||(s[24]=[i("span",{class:"twoslash-popup-container vp-copy-ignore"},[i("div",{class:"twoslash-popup-error vp-doc"},[i("p",null,[t('Expected no line breaks before opening bracket of the "div" element, but 1 line break found. ('),i("a",{href:"https://ota-meshi.github.io/eslint-plugin-lodash-template/rules/html-content-newline.html"},"lodash-template/html-content-newline"),t(")")])])],-1)])),default:l(()=>[s[25]||(s[25]=i("span",null,[i("span",{class:"twoslash-error-empty"})],-1))]),_:1,__:[25]})]),s[31]||(s[31]=t(`
`,-1)),s[32]||(s[32]=i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"</"),i("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"div"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")],-1))])])]),s[37]||(s[37]=i("h2",{id:"implementation",tabindex:"-1"},[t("Implementation "),i("a",{class:"header-anchor",href:"#implementation","aria-label":'Permalink to "Implementation"'},"‚Äã")],-1)),s[38]||(s[38]=i("ul",null,[i("li",null,[i("a",{href:"https://github.com/ota-meshi/eslint-plugin-lodash-template/blob/master/lib/rules/html-content-newline.js",target:"_blank",rel:"noreferrer"},"Rule source")]),i("li",null,[i("a",{href:"https://github.com/ota-meshi/eslint-plugin-lodash-template/blob/master/tests/lib/rules/html-content-newline.js",target:"_blank",rel:"noreferrer"},"Test source")])],-1))])}const T=p(k,[["render",b]]);export{C as __pageData,T as default};
